{"componentChunkName":"component---src-templates-post-tsx","path":"/cppClasses_11/","result":{"data":{"markdownRemark":{"html":"<h2 id=\"constructor\" style=\"position:relative;\"><a href=\"#constructor\" aria-label=\"constructor permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Constructor</h2>\n<p>초기화를 하지 않으면 -> 문제가 발생할 수 있다.</p>\n<p>생성자는 두 개의 단계로 구성되어 있는데,</p>\n<p>1 전역변수, 지역변수, 힙 등 객체를 위한 메모리 공간 할당</p>\n<p>2 메모리 공간을 초기화하기 위한 초기화 함수가 자동으로 호출된다.</p>\n<p>따라서, 객체가 생성될 때, 초기상태가 있어야한다.</p>\n<ul>\n<li>\n<p>구조</p>\n<p>constructor는 객체가 생성될 때 자동 호출.</p>\n<p>클래스와 이름이 같고 return type이 없다.</p>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Rectangle</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">int</span> leftTopX<span class=\"token punctuation\">,</span> leftTopY<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">int</span> rightBottomX<span class=\"token punctuation\">,</span> rightBottomY<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">public</span><span class=\"token operator\">:</span>\n  <span class=\"token function\">Rectangle</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> x1<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> y1<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> x2<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> y2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n      leftTopX <span class=\"token operator\">=</span> x1<span class=\"token punctuation\">;</span>\n      leftTopY <span class=\"token operator\">=</span> y1<span class=\"token punctuation\">;</span>\n      rightBottomX <span class=\"token operator\">=</span> x2<span class=\"token punctuation\">;</span>\n      rightBottomY <span class=\"token operator\">=</span> y2<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n</li>\n<li>\n<p>생성자 호출</p>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">int</span> x1<span class=\"token punctuation\">,</span> y1<span class=\"token punctuation\">,</span> x2<span class=\"token punctuation\">,</span> y2<span class=\"token punctuation\">;</span>\n  cin <span class=\"token operator\">>></span> x1 <span class=\"token operator\">>></span> y1 <span class=\"token operator\">>></span> x2 <span class=\"token operator\">>></span> y2<span class=\"token punctuation\">;</span>\n\n  Ractangle <span class=\"token function\">r1</span><span class=\"token punctuation\">(</span>x1<span class=\"token punctuation\">,</span> y1<span class=\"token punctuation\">,</span> x2<span class=\"token punctuation\">,</span> y2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// 생성자(constructor) 호출</span>\n\n  <span class=\"token keyword\">int</span> x3<span class=\"token punctuation\">,</span> y3<span class=\"token punctuation\">,</span> x4<span class=\"token punctuation\">,</span> y4<span class=\"token punctuation\">;</span>\n  r1<span class=\"token punctuation\">.</span><span class=\"token function\">getLeftTop</span><span class=\"token punctuation\">(</span>x3<span class=\"token punctuation\">,</span> y3<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  r1<span class=\"token punctuation\">.</span><span class=\"token function\">getRightBottom</span><span class=\"token punctuation\">(</span>x4<span class=\"token punctuation\">,</span> y4<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  Rectangle<span class=\"token operator\">*</span> <span class=\"token keyword\">const</span> pR <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token function\">Rectangle</span><span class=\"token punctuation\">(</span>x3<span class=\"token punctuation\">,</span> y3<span class=\"token punctuation\">,</span> x4<span class=\"token punctuation\">,</span> y4<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>   <span class=\"token comment\">// 생성자 호출</span>\n\n  cout <span class=\"token operator\">&lt;&lt;</span> endl r1<span class=\"token punctuation\">.</span><span class=\"token function\">getArea</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">'\\t'</span> <span class=\"token operator\">&lt;&lt;</span> pR<span class=\"token operator\">-></span><span class=\"token function\">getArea</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">delete</span> pR<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n</li>\n</ul>","excerpt":"Constructor 초기화를 하지 않으면 -> 문제가 발생할 수 있다. 생성자는 두 개의 단계로 구성되어 있는데, 1 전역변수, 지역변수, 힙 등 객체를 위한 메모리 공간 할당 2 메모리 공간을 초기화하기 위한 초기화 함수가 자동으로 호출된다. 따…","tableOfContents":"<ul>\n<li><a href=\"/cppClasses_11/#constructor\">Constructor</a></li>\n</ul>","fields":{"slug":"/cppClasses_11/"},"frontmatter":{"title":"c++ Classes, Constructors and Destructor","date":"Apr 16, 2021","tags":["c++"],"keywords":["c++","class","constructor","destructor"],"update":"Jan 01, 0001"}}},"pageContext":{"slug":"/cppClasses_11/","series":[{"slug":"/cppClasses_1/","title":"c++ Classes, Definition of Classes","num":1},{"slug":"/cppClasses_2/","title":"c++ Classes, Data members 객체의 동적 생성","num":2},{"slug":"/cppClasses_3/","title":"c++ Classes, static data member & Static member function","num":3},{"slug":"/cppClasses_4/","title":"c++ Classes, 객체 데이터 멤버","num":4},{"slug":"/cppClasses_5/","title":"c++ Classes, 단방향 연결 리스트","num":5},{"slug":"/cppClasses_6/","title":"c++ Classes, 객체 데이터 멤버","num":6},{"slug":"/cppClasses_7/","title":"c++ Classes, this","num":7},{"slug":"/cppClasses_8/","title":"c++ Classes, Nested Classes","num":8},{"slug":"/cppClasses_9/","title":"c++ Classes, New features on classes since c++11","num":9},{"slug":"/cppClasses_10/","title":"c++ Classes, Information Hidiing","num":10},{"slug":"/cppClasses_11/","title":"c++ Classes, Constructors and Destructor","num":11}],"lastmod":"2021-04-16"}},"staticQueryHashes":["2027115977","694178885"]}
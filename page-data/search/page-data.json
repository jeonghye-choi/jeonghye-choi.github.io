{"componentChunkName":"component---src-pages-search-tsx","path":"/search/","result":{"data":{"allMarkdownRemark":{"edges":[{"node":{"rawMarkdownBody":"\n![](KernelDriverError.png)\n\n<br/>\n\n맥에서는 모르는 프로그램에 대해 실행 권한이 필요하다.\n권한을 주지 않았을 때, 커널쪽에서 처리하지 못해서 생기는 오류라고 한다.\n\n즉, 시스템 바닥까지 가서 처리해야하는데 그러지 못해서 생긴 에러다.\n\n해결방법은, 이걸 실행하는 곳에서 보안 및 개인정보 보호에서 허용 하면되지만...\n\n![](nothingShow.png)\n\n아무것도 안보임..!!\n\n찾아보니까 처음 설치하고 실행했을 때 뜨는데, 그때 30분안에 하지 않으면 안보인다고..\n빅서에게 두번의 기회는 없다고ㅠㅜ\n\n<br/>\n\n## 시도했던 다른 방법들\n\n해결방법을 찾아봤었는데\n\n1 복구모드에서 터미널에 \"curutil disable; reboot\"입력해서 가상머신 다시 설치하기\n\n2 아래 링크에 있는 방법들\n\n(https://medium.com/@DMeechan/fixing-the-installation-failed-virtualbox-error-on-mac-high-sierra-7c421362b5b5)\n\n이 방법들 모두 되지 않았다ㅠㅜ\n\n오라클 프로그램 허용이 이렇게 까다로울 일인가 싶긴하지만 보안을 위한 거라는데 어쩔 수 있나ㅠㅜ\n\n<br/>\n\n## 결국 해결한 방법\n\n돌고돌아 해결한 방법은 VirtualBox를 **\"깨끗하게\"** 지우고 다시 설치하는 것이였다.\n\n### > 1. Uninstall\n\n![](virtualBoxInstaller.png)\n\nVirtualBox 인스톨러를 다운받아서 오른쪽 밑에 있는 \"VirtualBox_Uninstall.tool\"을 더블클릭!\n\n언인스톨러를 사용해서 지워야 깔끔하게 지워진다. 절대로 그냥 휴지통에 넣으면 안된다!! 맥용 클리너보단 이 스크립트를 터미널에서 돌리기를 더 추천!\n\n```\nDo you wish to uninstall VirtualBox (Yes/No)?\nYes\n...\n\nDo you wish to uninstall the FUSE for macOS core package (Yes/No)?\nYes\n...\n\n[프로세스 완료됨]\n```\n\n<br/>\n\n### > 2. 다시 설치\n\n![](reinstall.png)\n\n그래도 아무 것도 안떠서 삭제하고 설치하기를 한 세번정도 반복했다.(더이상은 어떻게 해야할지 모르겠어서..)\n\n그렇게 다시 설치한지 세 번 만에, 보안 및 개인 정보 보호에 '재시동'버튼이 활성화 되었다. (새로운 시스템 확장 프로그램을 사용하기 전에 재시동 해야한다는 말과 함께)\n\n클릭!!\n\n재시동 후 가상머신 부르고 다시 보안 및 개인 정보 보호를 확인하니까 '재시동'버튼이 또 활성화 되어있었다. (개발자 'Oracle America, Inc.'관련 메세지와 함께)\n\n그래서 재시동 후 가상머신 불러오니까 또 에러...(제발ㅠㅜㅠ)\n\n![](error2.png)\n\n### > 3. Install VirtualBox extension\n\n알고보니까 VirtualBox extension을 다시 설치해야했다.\n\n![](extensionInstall.png)\n\n--> [가상머신 사이트](https://www.virtualbox.org/wiki/Downloads)에서 설치.\n\n<br/>\n\n드디어!! 드디어 실행된다!!\n![](success.png)\n\n초기 아이디 kali 비밀번호 kali\n\n![](success2.png)\n\n너무너무 감동스러운 화면><\n\n<br/>\n\n## 후기\n\n해결되고서 생각해보니 그동안 깔끔하게 지우지 않았던게 원인이였던 것 같다. (uninstaller가 괜히 있는게 아닌게지ㅎㅎ)\n\n이 에러는 새로운 분야의 공부를 위한 초기 환경설정 과정에서 만났는데, 첫 한걸음부터 난관이였어서 힘들었지만 그래도 오래걸려도 계속 붙잡고 있었던 보람은 있어서 좋다^^\n\n매번 느끼는 거지만 포기하지만 않으면 아무리 허무한 이유때문이여도 얻는건 분명 있는거 같다:)\n","excerpt":"맥에서는 모르는 프로그램에 대해 실행 권한이 필요하다.\n권한을 주지 않았을 때, 커널쪽에서 처리하지 못해서 생기는 오류라고 한다. 즉, 시스템 바닥까지 가서 처리해야하는데 그러지 못해서 생긴 에러다. 해결방법은, 이걸 실행하는 곳에서 보안 및 개인정…","fields":{"slug":"/VirtualBoxError/"},"frontmatter":{"date":"Mar 26, 2021","title":"\\[Error] Kernel driver not installed (rc=-1908 Mac Big Sur)","tags":["VirtualBox","Error"],"update":"Jan 01, 0001"}}},{"node":{"rawMarkdownBody":"\n> ### Q1. How many paths from (2,1) to (7,4) in the xy-plane?\n\n![](Q1_Img.png)\n\n=> **Permutation**\n\n> ### Q2. Do any tow people in Busan have the same number of hairs on their head?\n>  - A typical human head has an average of around 150,000 hairs, it is reasonable to assume (as an upper bound) that no one has more than 1,000,000 hairs on their head\n>  - The population of Busan is about 3.4 millions\n>> Q2. In this problem, what is 'pigeon'? 'hole'?\n\nhole : 머리카락 갯수, pigeon : 사람 수\n\n- number of holes = 1,000,000\n\n- number of pigeons = 3,400,000\n\n=> 따라서, 머릿카락이 같은 사람이 있을 수 밖에 없다\n\n<br/>\n\n# Principle of Counting\n\n## Rules of Sum and Product\n\n### 1. Rules of Sum\n\nm가지 방법으로 실행되는 일과 n가지 방법으로 실행되는 일이 동시에 발생하지 않는다면, \n일을 수행할 방법은 m+n가지 이다.\n\nfirst task can be performed in **\"m\"** ways(1), while a second task in **\"n\"** ways(2), and the two tasks **cannot** be performed **simultaneously**(3)\n\nthen, **performing either task** can be accomlished **in any one of m + n ways**\n\n![](sum_Img.png)\n\n> Q4. Travel Options\n> - You need to travel in between city A and B.\n> - You can either fly, take a train, or a bus.\n> - There are 12 different flight in between A and B, 5 different trains and 10 buses.\n> - How many options do you have to get from A to B?\n> => 12 + 5 + 10 = 27\n\n> Q5. # of Possible Password\n> - The minimul length of the password is 1 and the maximum is 3.\n> - The password can consist of only the uppercase letters (A~Z).\n> - How many cases are there for the possible password?\n> => 26 + 26x26 + 26x26x26 = 18,278\n\n\n### 2. Rule of Product\n\n순서가 있는데, 첫번째는 m개의 가능한 방법이 있고, 두번째는 n개의 가능한 방법이 있다. 전체 가능한 절차는 \n총 mxn 가지 이다.\n\nIf a procedure can be broken down into first & second stages(1),\n\nand if there are **m possible outcomes** for the first stage(2) and\n\nif, for each of these outcomes, there are **n possible outcomes** for the second stage(3), then the total procedure can be carried out, in the designated order, **in mxn ways**\n\n![](product_Img.png)\n\n\n> Q6. How many different bit strings of length 7 are there? (for example, 1011010)\n> => 2^7 = 128\n\n> Q7. The license plate of the car is consisted of two alphabet letters followed by four digits\n> => 26x26x10^4 = 676x10^4\n\n\n## Permutations (순열)\n\n\\#arrangement \\#order\n\n순서를 가지고 나열!\n\n![](permutations_Img.png)\n\n> Q8. The number of permutaions of the letters in the word \"COMPUTER\"\n> => 8!\n\n\n> Q9. If only five of the letters are used\n> => 8C5 x 5!\n\n> Q10. If 'C' and 'O' should be \n\n\n\n\n## Combinations : Binomial Theorem\n\n\n\n## Combinations with Repetition\n\n\n\n\n## Pigeonhole Principle\n\n","excerpt":"Q1. How many paths from (2,1) to (7,4) in the xy-plane?  => Permutation Q2. Do any tow people in Busan have the same number of hairs on the…","fields":{"slug":"/Counting_1/"},"frontmatter":{"date":"Mar 08, 2021","title":"Discrete Mathematics, Counting(1)","tags":["이산수학"],"update":"Jan 01, 0001"}}},{"node":{"rawMarkdownBody":"\n이산수학은 이산적인 수학 구조에 대해 연구하는 학문이다.\n연속되지 않는 공간을 다루는 데, 유한수학이라고도 하며, 전산학적인 측면을 강조할 때는 전산수학이라고도 한다. 주로 정수, 유한 그래프, 형식 언어 같이 가산집합(countable set)에 속하는 개념을 다룬다.\n<br/>\n\n# Intro\n\n## 🌀 Category\n\n- [Principle of Counting]()\n\n- [Logic: Propositional Calculus]()\n\n- Logic: Formal Proof in proposition Calculus\n- Logic: Predicate Calculus\n- Logic: Formal Proof in Predicate Calculus\n\n- Properties of Integer and Mathematical Induction\n- Chinese Remainder Theorem\n- Set Theory\n\n- Relations and Functions\n- Properties of Relations, Relations and directed graphs\n- Equivalence Relations: equivalent classes partition, refinement\n\n- Ordering Relations: poset\n- Ordering Relations: bounds, lattices\n\n<br/>\n\n## 🌀 Mathematics\n\n### Foundation & Philosophy\n\n**: 수학 기초론 (Logic)**\n\n- Mathematical Logic / Formal Logic (수리논리학/ 형식논리학)\n\n- Set Theory (집합론)\n\n- Category Theory (범주론)\n\n- Theory of Computation (계산이론)\n\n\n### Pure Mathematics\n\n#### 1. **Quantity - Arithmetic(산술)**\n    \n- Natural Numbers(자연수): N\n\n- Integers(정수): Z\n\n- Rational Numbers(유리수): Q\n\n- Real Numbers(실수): R\n\n- Complex Numbers(복소수)\n\n> ### Q2. What is symbol for the Natural Numbers? - N\n\n\n#### 2. 🌟 **Structure - Algebra(대수학)**\n\n=> 이산수학의 Main Contents\n\n代(대신하다 대) 1, 2, ... , x, y, z\n\n- Combinatorics(조합론)\n\n    - 순열, 조합\n\n- Number Theory(수론)\n\n- Group Theory(군론)\n\n- Graph Theory(그래프 이론)\n\n- Order Theory(순서론)\n\n#### 3. **Space - Geometry(기하학)**\n\n- Trigonometry(삼각법/삼각함수)\n\n- Differential Geometry(미분기하학)\n\n- Topology(위상수학)\n\n- Fractal Geometry(프랙탈 기하학)\n\n\n#### 4. **Change - Analysis(해석학)**\n\n변화를 다루는 것\n\n- Calculus(미적분학)\n\n- Vector Calculus(벡터 미적분학)\n\n- Differential Equations(미분방정식)\n\n- Dynamical System(동역학계)\n\n- Chaos Theory(혼돈이론)\n\n\n### Applied Mathematics\n\n: Statistics, Decision Sciences and Computational Mathematics\n\n- Probability Theory(확률론)\n\n- Statistics(통계학)\n\n- Numerical Analysis(수치해석)\n\n- Optimization(최적화 이론)\n\n- Mathematical Finance(금융수학)\n\n- Game Theory(게임 이론)\n\n- Control Theory(제어 이론)\n\n- Cryptography(암호학)\n\n- Mathematical Physics(수리물리학)\n\n- Fluid Dynamics(유체역학)\n\n<br/>\n\n## 🌀 Discrete Mathematics\n\n이산적인 수학 구조에 대해 연구하는 학문.\n\n연속되지 않는 공간을 다루는 데, 유한수학이라고도 하며, 전산학적인 측면을 강조할 때는 전산수학이라고도 한다.\n\n주로 정수, 유한 그래프, 형식 언어 같이 가산집합(countable set)에 속하는 개념을 다룬다.\n\n이산수학은 전산학의 기초가 되는데, 이것은 컴퓨터에서 다루는 자료형이 이산적이라는 것에서 기안한다. 이산수학에서 나온 개념과 기호는 컴퓨터알고리즘과 프로그래밍 언어의 문제나 대상들을 연구하는 데 유용하다.\n\n> ### Q3. 이산수학을 영어로? - Discrete Mathematics\n\n### 이산수학의 주제\n\n- 조합론 : Combinatorics\n\n- 논리학: Logic\n\n- 집합론: Set Theory\n\n- 관계론: Relation Algebra\n\n- 그래프 이론: Graph Theory\n\n- 수론: Number Theory\n    - 암호학: Cryptography\n\n- 오토마타: Automata Theory","excerpt":"이산수학은 이산적인 수학 구조에 대해 연구하는 학문이다.\n연속되지 않는 공간을 다루는 데, 유한수학이라고도 하며, 전산학적인 측면을 강조할 때는 전산수학이라고도 한다. 주로 정수, 유한 그래프, 형식 언어 같이 가산집합(countable set)에 …","fields":{"slug":"/DiscreteMathematics/"},"frontmatter":{"date":"Mar 03, 2021","title":"Discrete Mathematics(이산수학), Intro","tags":["이산수학"],"update":"Jan 01, 0001"}}}]}},"pageContext":{}},"staticQueryHashes":["2027115977","694178885"]}
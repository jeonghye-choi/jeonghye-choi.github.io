{"componentChunkName":"component---src-templates-post-tsx","path":"/cppClasses_6/","result":{"data":{"markdownRemark":{"html":"<h2 id=\"const-member-function\" style=\"position:relative;\"><a href=\"#const-member-function\" aria-label=\"const member function permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>const member function</h2>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token comment\">// Rectangle.h</span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">ifndef</span> <span class=\"token expression\">Rectangle_h</span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token expression\">Rectangle_h</span></span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Rectangle</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">int</span> leftTopX<span class=\"token punctuation\">,</span> leftTopY<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">int</span> rightBottomX<span class=\"token punctuation\">,</span> rightBottomY<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">void</span> <span class=\"token function\">setLeftTop</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>  <span class=\"token comment\">// 데이터 멤버 수정함 -> const사용불가!</span>\n        leftTopX <span class=\"token operator\">=</span> x<span class=\"token punctuation\">;</span>\n        leftTopY <span class=\"token operator\">=</span> y<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">void</span> <span class=\"token function\">setRightBottom</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        rightBottomX <span class=\"token operator\">=</span> x<span class=\"token punctuation\">;</span>\n        rightBottomY <span class=\"token operator\">=</span> y<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">public</span><span class=\"token operator\">:</span>\n    <span class=\"token keyword\">static</span> <span class=\"token keyword\">int</span> allCount<span class=\"token punctuation\">;</span>  <span class=\"token comment\">// 명시만</span>\n\n    <span class=\"token function\">Rectangle</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> allCount<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n    <span class=\"token operator\">~</span><span class=\"token function\">Rectangle</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> allCount<span class=\"token operator\">--</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">static</span> <span class=\"token keyword\">int</span> <span class=\"token function\">getAllCount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">return</span> allCount<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>   <span class=\"token comment\">// not const</span>\n    <span class=\"token keyword\">static</span> <span class=\"token keyword\">bool</span> <span class=\"token function\">noRectangle</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">return</span> allCount <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">void</span> <span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> x1<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> y1<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> x2<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> y2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        <span class=\"token function\">setLeftTop</span><span class=\"token punctuation\">(</span>x1<span class=\"token punctuation\">,</span> y1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">setRightBottom</span><span class=\"token punctuation\">(</span>x2<span class=\"token punctuation\">,</span> y2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">void</span> <span class=\"token function\">getLeftTop</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token operator\">&amp;</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span><span class=\"token operator\">&amp;</span> y<span class=\"token punctuation\">)</span><span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>  <span class=\"token comment\">//const: 자신의 데이터멤버의 값을 변경하지 않고 읽기만 한다고 명시.</span>\n        x <span class=\"token operator\">=</span> leftTopX<span class=\"token punctuation\">;</span>\n        y <span class=\"token operator\">=</span> leftTopY<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">void</span> <span class=\"token function\">getRightBottom</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token operator\">&amp;</span> x<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span><span class=\"token operator\">&amp;</span> y<span class=\"token punctuation\">)</span><span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span>\n        x <span class=\"token operator\">=</span> rightBottomX<span class=\"token punctuation\">;</span>\n        y <span class=\"token operator\">=</span> rightBottomY<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">int</span> <span class=\"token function\">getWidth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span> <span class=\"token keyword\">return</span> rightBottomX <span class=\"token operator\">-</span> leftTopX<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">int</span> <span class=\"token function\">getHeight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token keyword\">const</span><span class=\"token punctuation\">{</span> <span class=\"token keyword\">return</span> rightBottomY <span class=\"token operator\">-</span> leftTopY<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">int</span> <span class=\"token function\">getArea</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token keyword\">const</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// 명시만</span>\n    <span class=\"token keyword\">void</span> <span class=\"token function\">moveBy</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> deltaX<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> deltaY<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// 명시만</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">endif</span></span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token comment\">// Rectangle.cpp</span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;iostream></span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"Rectangle.h\"</span></span>\n\n<span class=\"token keyword\">int</span> Rectangle<span class=\"token operator\">::</span>allCount <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">int</span> <span class=\"token class-name\">Rectangle</span><span class=\"token operator\">::</span><span class=\"token function\">getArea</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">return</span> <span class=\"token function\">getWidth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token function\">getHeight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">void</span> <span class=\"token class-name\">Rectangle</span><span class=\"token operator\">::</span><span class=\"token function\">moveBy</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> deltaX<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> deltaY<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token function\">setLeftTop</span><span class=\"token punctuation\">(</span>leftTopX <span class=\"token operator\">+</span> deltaX<span class=\"token punctuation\">,</span> leftTopY<span class=\"token operator\">+</span>deltaY<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">setRightBottom</span><span class=\"token punctuation\">(</span>rightBottomX <span class=\"token operator\">+</span> deltaX<span class=\"token punctuation\">,</span> rightBottomY <span class=\"token operator\">+</span> deltaY<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token comment\">// RectangleMain.cpp</span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;iostream></span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">\"Rectangle.h\"</span></span>\n<span class=\"token keyword\">using</span> <span class=\"token keyword\">namespace</span> std<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token function\">readRectangle</span><span class=\"token punctuation\">(</span>Rectangle<span class=\"token operator\">&amp;</span> r<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">int</span> x1<span class=\"token punctuation\">,</span> y1<span class=\"token punctuation\">,</span> x2<span class=\"token punctuation\">,</span> y2<span class=\"token punctuation\">;</span>\n    cin <span class=\"token operator\">>></span> x1 <span class=\"token operator\">>></span> y1 <span class=\"token operator\">>></span> x2 <span class=\"token operator\">>></span> y2<span class=\"token punctuation\">;</span>\n    r<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span>x1<span class=\"token punctuation\">,</span> y1<span class=\"token punctuation\">,</span> x2<span class=\"token punctuation\">,</span> y2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token function\">printRectangle</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> Rectangle<span class=\"token operator\">&amp;</span> r<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">int</span> x1<span class=\"token punctuation\">,</span> y1<span class=\"token punctuation\">,</span> x2<span class=\"token punctuation\">,</span> y2<span class=\"token punctuation\">;</span>\n    r<span class=\"token punctuation\">.</span><span class=\"token function\">getLeftTop</span><span class=\"token punctuation\">(</span>x1<span class=\"token punctuation\">,</span> y1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    r<span class=\"token punctuation\">.</span><span class=\"token function\">getRightBottom</span><span class=\"token punctuation\">(</span>x2<span class=\"token punctuation\">,</span> y2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    cout <span class=\"token operator\">&lt;&lt;</span> x1 <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"\\t\"</span> <span class=\"token operator\">&lt;&lt;</span> y1 <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"\\t\"</span> <span class=\"token operator\">&lt;&lt;</span> x2 <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"\\t\"</span> <span class=\"token operator\">&lt;&lt;</span> y2 <span class=\"token operator\">&lt;&lt;</span> endl<span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// r.setLeftTop(0,0); 은 Error 발생 &lt;= const 때문에</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    Rectangle r<span class=\"token punctuation\">;</span>\n    <span class=\"token function\">readRectangle</span><span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">printRectangle</span><span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","excerpt":"const member function","tableOfContents":"<ul>\n<li><a href=\"/cppClasses_6/#const-member-function\">const member function</a></li>\n</ul>","fields":{"slug":"/cppClasses_6/"},"frontmatter":{"title":"c++ Classes, 객체 데이터 멤버","date":"Apr 09, 2021","tags":["c++"],"keywords":["c++","class","객체 데이터 멤버","const member function"],"update":"Jan 01, 0001"}}},"pageContext":{"slug":"/cppClasses_6/","series":[{"slug":"/cppClasses_1/","title":"c++ Classes, Definition of Classes","num":1},{"slug":"/cppClasses_2/","title":"c++ Classes, Data members 객체의 동적 생성","num":2},{"slug":"/cppClasses_3/","title":"c++ Classes, static data member & Static member function","num":3},{"slug":"/cppClasses_4/","title":"c++ Classes, 객체 데이터 멤버","num":4},{"slug":"/cppClasses_5/","title":"c++ Classes, 단방향 연결 리스트","num":5},{"slug":"/cppClasses_6/","title":"c++ Classes, 객체 데이터 멤버","num":6},{"slug":"/cppClasses_7/","title":"c++ Classes, this","num":7},{"slug":"/cppClasses_8/","title":"c++ Classes, Nested Classes","num":8},{"slug":"/cppClasses_9/","title":"c++ Classes, New features on classes since c++11","num":9},{"slug":"/cppClasses_10/","title":"c++ Classes, Information Hidiing","num":10}],"lastmod":"2021-04-09"}},"staticQueryHashes":["2027115977","694178885"]}